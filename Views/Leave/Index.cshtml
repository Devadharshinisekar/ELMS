@model IEnumerable<ELMSApplication.Leave>
@using Microsoft.AspNetCore.Http;
@using Microsoft.AspNetCore.Mvc;

@{
    ViewData["Title"] = "Index";
}


<h4>Welcome @Context.Session.GetString("EmployeeName")</h4> 


<h1 align="center">Leave Dashboard</h1><section class="vh-100" style="background-color: #f4f5f7;">
  <div class="container py-5 h-100">
    <div class="row d-flex justify-content-center align-items-center h-100">
      <div class="col col-lg-6 mb-4 mb-lg-0">
        <div class="card mb-3" style="border-radius: .5rem;">
          <div class="row g-0">
            <div class="col-md-4 gradient-custom text-center text-white"
              style="border-top-left-radius: .5rem; border-bottom-left-radius: .5rem;">
              <img src="https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava1-bg.webp"
                alt="Avatar" class="img-fluid my-5" style="width: 80px;" />
              <h5> @Context.Session.GetString("EmployeeName")</h5>
               @if (@Context.Session.GetString("Admin") != null && @Context.Session.GetString("Admin").Equals("False"))
                {<p>employee</p>}
                else{
                   <p>Admin</p> 
                }
              <i class="far fa-edit mb-5"></i>
            </div>
            <div class="col-md-8">
              <div class="card-body p-4">
                <h6>Information</h6>
                <hr class="mt-0 mb-4">
                <div class="row pt-1">
                  <div class="col-6 mb-3">
                    <h6>EmployeeId</h6>
                    <p class="text-muted"></p>@Html.DisplayNameFor(model => model.EmployeeId)
                  </div>
                  <div class="col-6 mb-3">
                    <h6>EmployeeName</h6>
                    <p class="text-muted">@Context.Session.GetString("EmployeeName")</p>
                  </div><div class="nav-item">
    <a class="nav-link " asp-area="left" asp-controller="Employee" asp-action="LogOut"><b>LogOut</b></a>
    </div>
                </div>
                <div class="d-flex justify-content-start">
                  <a href="#!"><i class="fab fa-facebook-f fa-lg me-3"></i></a>
                  <a href="#!"><i class="fab fa-twitter fa-lg me-3"></i></a>
                  <a href="#!"><i class="fab fa-instagram fa-lg"></i></a>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
<br></br>
 @if (@Context.Session.GetString("Admin") != null && @Context.Session.GetString("Admin").Equals("False"))
 {
<p>    
     <input type="button"
         value="Create" class="btn btn-success"
         onclick="location.href='@Url.Action("Create", "Leave")'" />
</p>
 }
else
{
<p align="right"><b>To give employee access to the system <a href="http://localhost:5158/swagger/index.html" target="_blank">Click here</a></b></p>
}
<br><br/>
<table class="table table-bordered">
      <thead class="thead-light">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.EmployeeId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LeaveType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.EmployeeId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LeaveType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
              <td>
                <input type="button" value="View" class="btn btn-secondary" onclick="location.href='@Url.Action("Details", "Leave",new { id = item.LeaveId})'"  />    
                @if (@Context.Session.GetString("Admin") != null && @Context.Session.GetString("Admin").Equals("True")){ 
                <input type="button" value="Approved" class="btn btn-success" onclick="location.href='@Url.Action("Approved", "Leave",new { id = item.LeaveId})'"  />    
                 <input type="button" value="Rejected" class="btn btn-danger" onclick="location.href='@Url.Action("Rejected", "Leave",new { id = item.LeaveId})'"  />      
                }   
               else
                {
                    <input type="button" value="Edit" class="btn btn-info" onclick="location.href='@Url.Action("Edit", "Leave", new { id = item.LeaveId})'"  />
                    <input type="button" value="Delete" class="btn btn-danger"  onclick="location.href='@Url.Action("Delete", "Leave",new { id = item.LeaveId})'" />
                }  
                  
            </td>
        </tr>
}
    </tbody>
</table>
